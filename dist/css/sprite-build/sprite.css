/*
Icon classes can be used entirely standalone. They are named after their original file names.

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.icon-feature1 {
  background-image: url(sprite.png);
  background-position: 0px -215px;
  width: 86px;
  height: 34px;
}
.icon-feature2 {
  background-image: url(sprite.png);
  background-position: 0px 0px;
  width: 101px;
  height: 73px;
}
.icon-feature3 {
  background-image: url(sprite.png);
  background-position: -75px -78px;
  width: 119px;
  height: 39px;
}
.icon-feature4 {
  background-image: url(sprite.png);
  background-position: -75px -153px;
  width: 98px;
  height: 39px;
}
.icon-feature5 {
  background-image: url(sprite.png);
  background-position: -231px 0px;
  width: 64px;
  height: 56px;
}
.icon-feature6 {
  background-image: url(sprite.png);
  background-position: -106px 0px;
  width: 120px;
  height: 47px;
}
.icon-instruction1 {
  background-image: url(sprite.png);
  background-position: 0px -153px;
  width: 70px;
  height: 57px;
}
.icon-instruction2 {
  background-image: url(sprite.png);
  background-position: -231px -61px;
  width: 56px;
  height: 56px;
}
.icon-instruction3 {
  background-image: url(sprite.png);
  background-position: 0px -78px;
  width: 70px;
  height: 70px;
}
